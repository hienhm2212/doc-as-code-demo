{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>This is a demonstration of a docs-as-code workflow using MkDocs and Org-mode.</p>"},{"location":"#what-is-docs-as-code","title":"What is Docs-as-Code?","text":"<p>Docs-as-code is a documentation methodology that treats documentation like source code. This approach brings several benefits:</p> <ul> <li>Version control for documentation</li> <li>Code review processes for docs</li> <li>Automated builds and deployments</li> <li>Consistent formatting and styling</li> <li>Integration with development workflows</li> </ul>"},{"location":"#project-overview","title":"Project Overview","text":"<p>This demo showcases how to set up a documentation site using:</p> <ul> <li>Org-mode for content authoring</li> <li>MkDocs for site generation</li> <li>Material theme for styling</li> <li>Git for version control</li> </ul>"},{"location":"#workflow","title":"Workflow","text":"<p>The docs-as-code workflow follows these steps:</p>"},{"location":"#1-content-creation","title":"1. Content Creation","text":"<ul> <li>Write documentation in Org-mode format</li> <li>Use structured headers and formatting</li> <li>Include code examples and diagrams</li> <li>Add metadata and frontmatter</li> </ul>"},{"location":"#2-configuration","title":"2. Configuration","text":"<ul> <li>Configure MkDocs with <code>mkdocs.yml</code></li> <li>Set up theme and plugins</li> <li>Define navigation structure</li> <li>Configure build settings</li> </ul>"},{"location":"#3-build-process","title":"3. Build Process","text":"<pre><code>mkdocs build\n</code></pre> <p>This command:</p> <ul> <li>Processes Org-mode files</li> <li>Generates HTML, CSS, and JavaScript</li> <li>Creates the <code>site/</code> directory</li> <li>Applies theme styling</li> </ul>"},{"location":"#4-deployment","title":"4. Deployment","text":"<ul> <li>Commit changes to version control</li> <li>Push to repository</li> <li>Deploy to hosting platform (GitHub Pages, Netlify, etc.)</li> </ul>"},{"location":"#features","title":"Features","text":""},{"location":"#multi-format-support","title":"Multi-format Support","text":"<p>This setup supports multiple input formats:</p> <ul> <li>Org-mode (primary)</li> <li>Markdown (alternative)</li> <li>ReStructuredText (if configured)</li> </ul>"},{"location":"#theme-customization","title":"Theme Customization","text":"<p>The site uses the Material theme with:</p> <ul> <li>Responsive design</li> <li>Dark/light mode toggle</li> <li>Search functionality</li> <li>Navigation sidebar</li> <li>Custom CSS support</li> </ul>"},{"location":"#version-control-integration","title":"Version Control Integration","text":"<ul> <li>Git-based workflow</li> <li>Branch-based development</li> <li>Pull request reviews</li> <li>Automated testing</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.7+</li> <li>pip package manager</li> <li>Git for version control</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install mkdocs mkdocs-material\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<ol> <li>Clone the repository</li> <li>Install dependencies</li> <li>Edit documentation in <code>docs/</code></li> <li>Run <code>mkdocs serve</code> for local preview</li> <li>Run <code>mkdocs build</code> for production build</li> </ol>"},{"location":"#project-structure","title":"Project Structure","text":"<pre><code>docs-as-code-demo/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 index.org          # Main documentation\n\u2502   \u251c\u2500\u2500 getting-started.org # Getting started guide\n\u2502   \u251c\u2500\u2500 design/\n\u2502   \u2502   \u2514\u2500\u2500 system-arch.org # System architecture\n\u2502   \u2514\u2500\u2500 stylesheets/        # Custom CSS\n\u251c\u2500\u2500 mkdocs.yml             # MkDocs configuration\n\u2514\u2500\u2500 site/                  # Generated site (after build)\n</code></pre>"},{"location":"#best-practices","title":"Best Practices","text":""},{"location":"#documentation-standards","title":"Documentation Standards","text":"<ul> <li>Use clear, concise language</li> <li>Include code examples</li> <li>Add diagrams when helpful</li> <li>Keep content up-to-date</li> <li>Review and test regularly</li> </ul>"},{"location":"#org-mode-tips","title":"Org-mode Tips","text":"<ul> <li>Use consistent header levels</li> <li>Add metadata blocks</li> <li>Include source code blocks</li> <li>Use tables for structured data</li> <li>Add links to related content</li> </ul>"},{"location":"#workflow-tips","title":"Workflow Tips","text":"<ul> <li>Commit frequently</li> <li>Use descriptive commit messages</li> <li>Review changes before merging</li> <li>Test builds locally</li> <li>Monitor deployment status</li> </ul>"},{"location":"#contributing","title":"Contributing","text":""},{"location":"#how-to-contribute","title":"How to Contribute","text":"<ol> <li>Fork the repository</li> <li>Create a feature branch</li> <li>Make your changes</li> <li>Test the build locally</li> <li>Submit a pull request</li> </ol>"},{"location":"#code-of-conduct","title":"Code of Conduct","text":"<ul> <li>Be respectful and inclusive</li> <li>Provide constructive feedback</li> <li>Follow established conventions</li> <li>Help improve documentation</li> </ul>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE file for details.</p>"},{"location":"#support","title":"Support","text":"<p>For questions or issues:</p> <ul> <li>Check the documentation</li> <li>Search existing issues</li> <li>Create a new issue</li> <li>Contact the maintainers</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This is document demo write by Markdown.</p>"},{"location":"getting-started/#example-code","title":"Example Code","text":"<pre><code>def hello\n  puts \"Hello Doc as code\"\nend\n</code></pre> <pre><code>def hello_world():\n    print(\"Hello, World!\")\n    return \"success\"\n</code></pre> <pre><code>function greet(name) {\n    console.log(`Hello, ${name}!`);\n    return \"greeting sent\";\n}\n</code></pre> <pre><code>#!/bin/bash\necho \"Hello from bash script\"\nmkdir -p /tmp/test\n</code></pre>"},{"location":"getting-started/#list","title":"List","text":"<ul> <li>Service A</li> <li>Service B</li> </ul>"},{"location":"getting-started/#table","title":"Table","text":"Method Description GET Fetch resource PUT Update resource DELETE Delete resource"},{"location":"pdf-workflow/","title":"PDF Generation Workflow","text":"<p>This document describes the PDF generation process for approval and baseline workflows.</p>"},{"location":"pdf-workflow/#overview","title":"Overview","text":"<p>The PDF generation system creates professional PDF documents from your MkDocs documentation for: - Approval processes - Stakeholder review and sign-off - Baseline documentation - Version-controlled snapshots - Compliance requirements - Audit trails and documentation</p>"},{"location":"pdf-workflow/#prerequisites","title":"Prerequisites","text":""},{"location":"pdf-workflow/#install-pdf-dependencies","title":"Install PDF Dependencies","text":"<pre><code># Install PDF generation requirements\npip install -r requirements-pdf.txt\n\n# Or install individually\npip install mkdocs-pdf-export-plugin weasyprint\n</code></pre>"},{"location":"pdf-workflow/#system-requirements","title":"System Requirements","text":"<ul> <li>Linux: May need additional system packages</li> <li>macOS: Should work out of the box</li> <li>Windows: May require additional setup</li> </ul>"},{"location":"pdf-workflow/#pdf-generation-process","title":"PDF Generation Process","text":""},{"location":"pdf-workflow/#1-quick-pdf-generation","title":"1. Quick PDF Generation","text":"<pre><code># Generate PDF with default version (1.0)\n./generate-pdf.sh\n\n# Generate PDF with specific version\n./generate-pdf.sh 2.1\n</code></pre>"},{"location":"pdf-workflow/#2-manual-pdf-generation","title":"2. Manual PDF Generation","text":"<pre><code># Build the site and generate PDF\nmkdocs build\n\n# PDF will be created in pdf/demo-docs.pdf\n</code></pre>"},{"location":"pdf-workflow/#3-versioned-pdf-generation","title":"3. Versioned PDF Generation","text":"<p>The script automatically creates: - Individual page PDFs (e.g., <code>index.pdf</code>, <code>getting-started.pdf</code>) - Combined PDF (<code>demo-docs-combined.pdf</code>) - All pages merged - Versioned copies with timestamps for audit trails</p>"},{"location":"pdf-workflow/#pdf-features","title":"PDF Features","text":""},{"location":"pdf-workflow/#individual-page-pdfs","title":"Individual Page PDFs","text":"<ul> <li>Per-page generation: Each documentation page becomes a separate PDF</li> <li>Maintains formatting: Preserves all styling and layout</li> <li>Easy distribution: Share specific sections as needed</li> </ul>"},{"location":"pdf-workflow/#combined-pdf","title":"Combined PDF","text":"<ul> <li>Single document: All pages merged into one comprehensive PDF</li> <li>Automatic ordering: Follows the navigation structure</li> <li>Professional output: Ready for approval and baseline processes</li> </ul>"},{"location":"pdf-workflow/#version-control","title":"Version Control","text":"<ul> <li>Timestamped versions: Automatic versioning with timestamps</li> <li>Audit trail: Complete history of document versions</li> <li>Semantic versioning: Support for custom version numbers</li> </ul>"},{"location":"pdf-workflow/#approval-workflow","title":"Approval Workflow","text":""},{"location":"pdf-workflow/#1-generate-pdf-for-review","title":"1. Generate PDF for Review","text":"<pre><code>./generate-pdf.sh 1.0\n</code></pre>"},{"location":"pdf-workflow/#2-review-process","title":"2. Review Process","text":"<ul> <li>Stakeholder review of PDF content</li> <li>Technical review of accuracy</li> <li>Compliance review of requirements</li> </ul>"},{"location":"pdf-workflow/#3-approval-sign-off","title":"3. Approval Sign-off","text":"<ul> <li>Digital signatures (if required)</li> <li>Version control of approved PDFs</li> <li>Audit trail maintenance</li> </ul>"},{"location":"pdf-workflow/#baseline-process","title":"Baseline Process","text":""},{"location":"pdf-workflow/#1-create-baseline-pdf","title":"1. Create Baseline PDF","text":"<pre><code># Generate baseline version\n./generate-pdf.sh 1.0-baseline\n</code></pre>"},{"location":"pdf-workflow/#2-version-control","title":"2. Version Control","text":"<ul> <li>Git tagging of baseline versions</li> <li>Release notes documentation</li> <li>Change tracking between versions</li> </ul>"},{"location":"pdf-workflow/#3-distribution","title":"3. Distribution","text":"<ul> <li>Internal distribution to teams</li> <li>External distribution to stakeholders</li> <li>Archive storage for compliance</li> </ul>"},{"location":"pdf-workflow/#configuration","title":"Configuration","text":""},{"location":"pdf-workflow/#pdf-settings-mkdocsyml","title":"PDF Settings (mkdocs.yml)","text":"<pre><code>plugins:\n  - search\n  - pdf-export\n</code></pre> <p>The <code>mkdocs-pdf-export-plugin</code> automatically generates individual PDFs for each page in your documentation.</p>"},{"location":"pdf-workflow/#customization-options","title":"Customization Options","text":"<ul> <li>PDF-specific CSS - Optimized styles for PDF generation</li> <li>Code block preservation - Maintains syntax highlighting and formatting</li> <li>Table formatting - Ensures proper table display and borders</li> <li>Content visibility - Ensures all content is properly displayed</li> <li>Page layout - A4 format with proper margins</li> <li>Typography - Optimized fonts for PDF readability</li> </ul>"},{"location":"pdf-workflow/#best-practices","title":"Best Practices","text":""},{"location":"pdf-workflow/#1-version-management","title":"1. Version Management","text":"<ul> <li>Semantic versioning (1.0, 1.1, 2.0)</li> <li>Timestamped backups for audit trails</li> <li>Clear naming conventions</li> </ul>"},{"location":"pdf-workflow/#2-quality-assurance","title":"2. Quality Assurance","text":"<ul> <li>Pre-generation review of content</li> <li>PDF validation after generation</li> <li>Cross-platform testing</li> </ul>"},{"location":"pdf-workflow/#3-documentation","title":"3. Documentation","text":"<ul> <li>Change logs for each version</li> <li>Approval records maintenance</li> <li>Distribution lists tracking</li> </ul>"},{"location":"pdf-workflow/#troubleshooting","title":"Troubleshooting","text":""},{"location":"pdf-workflow/#common-issues","title":"Common Issues","text":"<ol> <li>PDF not generated</li> <li>Check plugin installation</li> <li>Verify mkdocs.yml configuration</li> <li> <p>Review error logs</p> </li> <li> <p>Styling issues</p> </li> <li>CSS compatibility with PDF</li> <li>Font availability</li> <li> <p>Layout adjustments</p> </li> <li> <p>Performance</p> </li> <li>Large document optimization</li> <li>Image compression</li> <li>Memory usage monitoring</li> </ol>"},{"location":"pdf-workflow/#support","title":"Support","text":"<p>For issues with PDF generation: 1. Check the mkdocs-pdf-export-plugin documentation 2. Review system requirements 3. Verify all dependencies are installed</p>"},{"location":"pdf-workflow/#integration-with-cicd","title":"Integration with CI/CD","text":""},{"location":"pdf-workflow/#github-actions-example","title":"GitHub Actions Example","text":"<pre><code>name: Generate PDF\non:\n  push:\n    tags:\n      - 'v*'\n\njobs:\n  pdf:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up Python\n        uses: actions/setup-python@v2\n        with:\n          python-version: '3.9'\n      - name: Install dependencies\n        run: |\n          pip install -r requirements-pdf.txt\n      - name: Generate PDF\n        run: ./generate-pdf.sh ${{ github.ref_name }}\n      - name: Upload PDF\n        uses: actions/upload-artifact@v2\n        with:\n          name: documentation-pdf\n          path: pdf/\n</code></pre> <p>This workflow ensures automated PDF generation for every release tag.</p>"},{"location":"template/","title":"Template Documentation","text":"<p>This is a template file for creating new documentation pages.</p>"},{"location":"template/#introduction","title":"Introduction","text":"<p>This template provides a structure for creating new documentation pages in your docs-as-code project.</p>"},{"location":"template/#system-overview","title":"System Overview","text":"<p>Use this template to: - Create consistent documentation structure - Follow established formatting guidelines - Ensure proper navigation integration</p>"},{"location":"template/#code-example","title":"Code Example","text":"<p>Here's an example of how to include code blocks:</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, World!\")\n}\n</code></pre>"},{"location":"template/#usage","title":"Usage","text":"<ol> <li>Copy this template file</li> <li>Rename it to your desired filename</li> <li>Update the content with your documentation</li> <li>Add it to the navigation in <code>mkdocs.yml</code></li> </ol>"},{"location":"template/#best-practices","title":"Best Practices","text":"<ul> <li>Use clear, descriptive headings</li> <li>Include code examples when relevant</li> <li>Add links to related documentation</li> <li>Keep content up-to-date</li> <li>Review and test regularly</li> </ul>"},{"location":"design/system-arch/","title":"Table of Contents","text":"<ol> <li>System Architecture</li> </ol>"},{"location":"design/system-arch/#system-architecture","title":"System Architecture","text":""}]}